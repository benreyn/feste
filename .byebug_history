exit
Feste::Subscriber.all
Feste::Subscriber
exit
email = Feste::Email.find_by(mailer: mailer, action: action)
cont
subscriber
action
mailer
cont
subscriber
email
exit
sub
email
action.to_s
mailer.class.name
mailer.class
mailer
exit
Feste::Email.find_by(mailer: mailer, action: action)
action
mailer
email
subscriber
exit
c.token
c.cancelled
c.email
c = Feste::CancelledSubscription.create(email: email, subscriber: subscriber, cancelled: true) 
cancellation
        cancellation = Feste::CancelledSubscription.create(email: email, subscriber: subscriber, cancelled: true)   
exit
message.to
message.to = new_to
new_to
new_to.delete(email)
new_to
new_to = message.to
arr
arr.delete(3)
arr = [1, 2, 3]
message.to
message.to.delete_at(message.to.index(email))
message.to
message.to.delete("test@email.com")
message.to.delete(email)
message.to.delete!(email)
message.to
message.to.delete(email)
message.to
unsubscibed_email?(email)
exit
sub.cancelled
sub = Subscriber.find_or_create_by(email: email)
email
cont
Feste::Subscriber.find_or_create_by(email: email)
subscriber::
Feste::Subscriber
exit
subscriber
cont
Feste::Subscriber
Feste::Subscriber.find(2)
Feste::Subscriber.find(1)
Feste::Subscriber.create(email: email, cancelled: true)
Feste::Subscriber.all
cont
Feste::Subscriber.find_or_create_by(email: email)
exit
subscriber
Feste::Subscriber.
cont
message.to
message
exit
message = Mailex
message.to
message
 message = MainMailer.send_mail(email)
